<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>com.microsoft.azure.kusto</groupId>
    <version>1.0.0</version>
    <artifactId>azure-kusto-log4j</artifactId>
    <name>Apache Log4j Kusto</name>
    <description>Kusto appender for Log4j.</description>
    <!-- Project co-ordinates -->
    <url>https://github.com/Azure/azure-kusto-log4j</url>
    <scm>
        <url>scm:git:https://github.com/Azure/azure-kusto-log4j</url>
        <connection>scm:git:https://github.com/Azure/azure-kusto-log4j</connection>
    </scm>
    <distributionManagement>
        <downloadUrl>https://github.com/Azure/azure-kusto-log4j/releases</downloadUrl>
    </distributionManagement>
    <!-- Distribution licenses -->
    <licenses>
        <license>
            <name>MIT License</name>
            <url>http://www.opensource.org/licenses/mit-license.php</url>
            <distribution>repo</distribution>
        </license>
    </licenses>
    <!-- Maintainers -->
    <developers>
        <developer>
            <id>microsoft</id>
            <name>Microsoft</name>
        </developer>
    </developers>
    <!-- Project properties -->
    <properties>
        <!-- list of generic project properties -->
        <docLabel>Kusto Documentation</docLabel>
        <projectDir>/azure-kusto-log4j</projectDir>
        <module.name>com.microsoft.azure.kusto</module.name>
        <maven.doap.skip>true</maven.doap.skip>
        <!-- dependency and library versions -->
        <awaitility.version>4.2.0</awaitility.version>
        <commons.csv.version>1.9.0</commons.csv.version>
        <formatter.version>2.21.0</formatter.version>
        <jacoco.version>0.8.8</jacoco.version>
        <java.version>1.8</java.version>
        <junit.version>5.9.0</junit.version>
        <kusto.version>3.2.1</kusto.version>
        <littleproxy.version>1.1.2</littleproxy.version>
        <log4j.version>2.19.0</log4j.version>
        <maven.assembly.plugin.version>3.1.0</maven.assembly.plugin.version>
        <maven.compiler.plugin.version>3.10.1</maven.compiler.plugin.version>
        <maven.dependency.plugin.version>3.3.0</maven.dependency.plugin.version>
        <maven.source.plugin.version>3.2.1</maven.source.plugin.version>
        <mockito.version>4.8.0</mockito.version>
        <!--Sonar properties for tests-->
        <sonar.dynamicAnalysis>reuseReports</sonar.dynamicAnalysis>
        <sonar.jacoco.reportPath>${project.basedir}/../target/jacoco.exec</sonar.jacoco.reportPath>
        <sonar.java.coveragePlugin>jacoco</sonar.java.coveragePlugin>
        <surefire.version>3.0.0-M7</surefire.version>
        <sonar.language>java</sonar.language>
    </properties>
    <!-- Direct dependencies -->
    <dependencies>
        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <version>${log4j.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>com.microsoft.azure.kusto</groupId>
            <artifactId>kusto-ingest</artifactId>
            <version>${kusto.version}</version>
        </dependency>
        <!-- Test dependencies -->
        <dependency>
            <groupId>org.littleshoot</groupId>
            <artifactId>littleproxy</artifactId>
            <version>${littleproxy.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-csv</artifactId>
            <version>${commons.csv.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-api</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.junit.jupiter</groupId>
            <artifactId>junit-jupiter-params</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-core</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-inline</artifactId>
            <version>${mockito.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.awaitility</groupId>
            <artifactId>awaitility</artifactId>
            <version>${awaitility.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <!-- Build Settings -->
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <source>${java.version}</source>
                    <target>${java.version}</target>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.jacoco</groupId>
                <artifactId>jacoco-maven-plugin</artifactId>
                <version>${jacoco.version}</version>
                <executions>
                    <execution>
                        <id>prepare-agent</id>
                        <goals>
                            <goal>prepare-agent</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>report</id>
                        <phase>verify</phase>
                        <goals>
                            <goal>report</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>${surefire.version}</version>
                <dependencies>
                    <dependency>
                        <groupId>org.junit.jupiter</groupId>
                        <artifactId>junit-jupiter-engine</artifactId>
                        <version>${junit.version}</version>
                    </dependency>
                </dependencies>
            </plugin>

            <plugin>
                <groupId>net.revelc.code.formatter</groupId>
                <artifactId>formatter-maven-plugin</artifactId>
                <version>${formatter.version}</version>
                <configuration>
                    <configFile>${project.basedir}/formatter.xml</configFile>
                    <encoding>UTF-8</encoding>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>flatten-maven-plugin</artifactId>
                <version>1.1.0</version>
                <configuration>
                    <flattenMode>oss</flattenMode>
                </configuration>
                <executions>
                    <!-- enable flattening -->
                    <execution>
                        <id>flatten</id>
                        <phase>process-resources</phase>
                        <goals>
                            <goal>flatten</goal>
                        </goals>
                    </execution>
                    <!-- ensure proper cleanup -->
                    <execution>
                        <id>flatten.clean</id>
                        <phase>clean</phase>
                        <goals>
                            <goal>clean</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
            </resource>
        </resources>
    </build>
</project>
